
 Question 1: What is React Router? How does it handle routing in single-page applications

What is React Router?

React Router is a library for handling navigation in React applications. It allows developers to create single-page applications (SPAs) with multiple views without requiring full page reloads.

How does React Router handle routing in SPAs?
1.Client-Side Routing: Unlike traditional websites where clicking a link sends a request to the server for a new page, React Router updates the URL and renders components 2.dynamically without reloading the page.
3.Virtual DOM Rendering: When the URL changes, React Router detects the change and renders the appropriate component while keeping the app state intact.
4.Uses Browser History API: It modifies the browser's history (pushState & replaceState), allowing smooth navigation and enabling the back/forward buttons.
5.Dynamic Routing: It allows defining routes based on conditions, parameters (:id), and lazy loading.

Example of React Router in a SPA:

import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
import Home from "./Home";
import About from "./About";

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/about" element={<About />} />
      </Routes>
    </Router>
  );
}

export default App;


Question 2: Difference Between BrowserRouter, Route, Link, and Switch Components in React Router?

In React Router, the main components used for navigation are BrowserRouter, Route, Link, and Switch. Hereâ€™s what each does:

1. BrowserRouter
It wraps your entire application and enables routing.
Uses the HTML5 history API to keep the UI in sync with the URL.
Example:
import { BrowserRouter } from "react-router-dom";

function App() {
  return (
    <BrowserRouter>
      <MyComponent />
    </BrowserRouter>
  );
}

2. Route
Defines a mapping between a URL and a component.
When the URL matches, the component renders.
Example:

import { Route } from "react-router-dom";

<Route path="/about" component={AboutPage} />

3. Link
Works like an <a> tag but prevents full page reload.
Used for navigating between pages.
Example:

import { Link } from "react-router-dom";

<Link to="/about">Go to About</Link>

4. Switch (Replaced by Routes in React Router v6)
Renders only the first matching route.
Prevents multiple <Route> components from rendering at the same time.

Example:

import { Switch, Route } from "react-router-dom";

<Switch>
  <Route path="/about" component={AboutPage} />
  <Route path="/contact" component={ContactPage} />
</Switch>


